version: '3.9'

volumes:
  stats-db-data:
  db-data:
  redis-data:
  backend-log:

services:
  redis-db:
    extends:
      file: ./services/redis.yml
      service: redis-db

  db-init:
    extends:
      file: ./services/db.yml
      service: db-init

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis-db
    extends:
      file: ./services/backend.yml
      service: backend
    image: ${BLOCKSCOUT_IMAGE:-blockscout/blockscout:latest}
    links:
      - db:database
    environment:
      ETHEREUM_JSONRPC_HTTP_URL: ${ETHEREUM_JSONRPC_HTTP:-http://host.docker.internal:9545}/
      ETHEREUM_JSONRPC_TRACE_URL: ${ETHEREUM_JSONRPC_TRACE:-http://host.docker.internal:9545}/
      # ETHEREUM_JSONRPC_WS_URL: ws://host.docker.internal:9545/
      CHAIN_ID: '901'
      ETHEREUM_JSONRPC_VARIANT: ${ETHEREUM_JSONRPC_VARIANT:-geth}

  # visualizer:
  #   extends:
  #     file: ./services/visualizer.yml
  #     service: visualizer

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend

  stats-db-init:
    extends:
      file: ./services/stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./services/stats.yml
      service: stats

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/nginx.yml
      service: proxy
